<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hospital Locator Application</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places"></script>
</head>
<body>

<div id="mapContainer" style="height: 500px;"></div>
<button id="searchHospitals">Locate Nearby Hospitals</button>
<div id="hospitalList"></div>

<script>
    let mapInstance;
    let currentLocation;

    // Function to set up the Google Map
    function initializeMap() {
        mapInstance = new google.maps.Map(document.getElementById("mapContainer"), {
            center: { lat: -34.397, lng: 150.644 }, // Initial center coordinates
            zoom: 15,
        });

        // Check if user's location can be accessed
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position) => {
                currentLocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude,
                };
                mapInstance.setCenter(currentLocation);
                new google.maps.Marker({
                    position: currentLocation,
                    map: mapInstance,
                    title: 'Your Current Location',
                });
            });
        }
    }

    // Event listener to find nearby hospitals
    document.getElementById("searchHospitals").onclick = function () {
        const vicinitySearch = {
            location: currentLocation,
            radius: '5000', // Search within a 5 km radius
            type: ['hospital'],
        };

        const placesService = new google.maps.places.PlacesService(mapInstance);
        placesService.nearbySearch(vicinitySearch, (results, status) => {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
                const hospitalListDiv = document.getElementById("hospitalList");
                hospitalListDiv.innerHTML = '<h2>Nearby Hospitals:</h2>';
                results.forEach(hospital => {
                    const hospitalDetails = `<p>${hospital.name}</p>`;
                    hospitalListDiv.innerHTML += hospitalDetails;

                    // Calculate estimated time to hospitals
                    estimateTravelTime(hospital.geometry.location);
                });
            }
        });
    };

    // Function to estimate time to reach hospitals
    function estimateTravelTime(destination) {
        const travelDetails = {
            origin: currentLocation,
            destination: destination,
            travelMode: google.maps.TravelMode.DRIVING,
            unitSystem: google.maps.UnitSystem.IMPERIAL,
            drivingOptions: {
                departureTime: new Date(Date.now() + 1000 * 60), // Current time plus one minute
                trafficModel: 'bestguess'
            }
        };

        const directionService = new google.maps.DirectionsService();
        directionService.route(travelDetails, (response, status) => {
            if (status === google.maps.DirectionsStatus.OK) {
                const legDetails = response.routes[0].legs[0];
                alert(`Estimated travel time to ${legDetails.end_address}: ${legDetails.duration.text}`);
            }
        });
    }

    // Initialize the map when the window loads
    window.onload = initializeMap;
</script>

</body>
</html>
